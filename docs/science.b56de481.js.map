{"mappings":"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","sources":["src/nyt.js"],"sourcesContent":["\r\nconst SCIENCE_API_URL = 'science.json';\r\n\r\nconst sciencecover = document.querySelector('.scienceNews');\r\nconst imgContainer = document.querySelector('#scienceImg');\r\nconst titleContainer = document.querySelector('#sciencetext .title');\r\nconst descriptionContainer = document.querySelector('#sciencetext .description');\r\n\r\nconst getTopscience = async () => {\r\n  try {\r\n    const res = await fetch(SCIENCE_API_URL);\r\n    const science = await res.json();\r\n    return science; \r\n  } catch (e) {\r\n    alert('An error occurred: ' + e);\r\n    return []; \r\n  }\r\n};\r\n\r\nconst updateContainerscience = (science) => {\r\n  sciencecover.innerHTML = '';\r\n  \r\n  (science.results || []).slice(3).forEach((science_data) => {\r\n    if (!science_data.title || science_data.url === \"null\" || science_data.url === \"\") {\r\n        return; \r\n    }\r\n\r\n    \r\n    const newsContainerarts = document.createElement('li');\r\n    newsContainerarts.setAttribute('class', 'article');\r\n\r\n    const imageUrl = (science_data.multimedia && science_data.multimedia.length > 0)\r\n      ? science_data.multimedia[0].url\r\n      : 'default-image-url.jpg';\r\n\r\n    newsContainerarts.innerHTML = `\r\n      <h2>${science_data.title}</h2>\r\n      <img src=\"${imageUrl}\" alt=\"${science_data.title}\"/>\r\n      <p>Author: ${science_data.byline || 'Unknown'}</p>\r\n      <p>Description: ${science_data.abstract || 'No description available'}</p>\r\n      <a href=\"${science_data.url}\" target=\"_blank\">About more</a>\r\n    `;\r\n\r\n    sciencecover.appendChild(newsContainerarts);\r\n  });\r\n};\r\n\r\nconst updateLatestNews = (news) => {\r\n    \r\n    if (!news) return;\r\n    const imageUrl = news.multimedia && news.multimedia.length > 0 ? news.multimedia[0].url : null;\r\n\r\n    if (imageUrl) {\r\n        imgContainer.innerHTML = `<img src=\"${imageUrl}\" alt=\"${news.title || 'News Image'}\" style=\"width%; height: 100%;\">`;\r\n    }\r\n\r\n    titleContainer.innerHTML = `<a href=\"${news.url || '#'}\"><h3>${news.title || 'No Title'}</h3></a>`;\r\n\r\n    descriptionContainer.textContent = news.abstract || 'No description available';\r\n};\r\n\r\n(async () => {\r\n    const ud_datascience = await getTopscience();\r\n    console.log(ud_datascience);\r\n    updateContainerscience(ud_datascience);\r\n\r\n    const validTopNews = (ud_datascience.results || []).find(news => \r\n        news.title && news.url && news.url !== \"null\" && news.url !== \"\"\r\n    );\r\n\r\n    if (validTopNews) {\r\n        updateLatestNews(validTopNews);\r\n    }\r\n})();\r\n\r\nasync function fetchBookData() {\r\n    try {/*https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json?api-key=eHsPZe0Dz2D2HKdpAys2HmM2Dmdsal8*/\r\n        const response = await fetch('test.json');\r\n\r\n        if (!response.ok) {\r\n            throw new Error('network response was not ok' + response.statusText);\r\n        }\r\n        const data = await response.json(); \r\n        let output = \"\";\r\n        data.results.books.forEach(item => {\r\n            output += `<div class=\"book-container\">\r\n                          <div class=\"book-list\">\r\n                            <p class=\"rank\">${item.rank}</p>\r\n                            <img src=\"${item.book_image}\" alt=\"${item.book_image}\">\r\n                            <p class=\"title\">${item.title}</p>\r\n                            <p class=\"author\">by ${item.author}</p>\r\n                            <p class=\"description\">${item.description}</p>\r\n                          </div>\r\n                        </div>`;\r\n        });\r\n        document.querySelector(\".book-lists\").innerHTML = output;\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching JSON data:', error);\r\n    }\r\n}\r\nfetchBookData();\r\n\r\n\r\n/*for navigation */\r\nconst toggleBtn = document.querySelector('.toggle_btn');\r\nconst dropdownMenu = document.querySelector('.dropdown_menu');\r\nconst icon = toggleBtn.querySelector('i');\r\n\r\ntoggleBtn.addEventListener('click', () => {\r\n  dropdownMenu.classList.toggle('open');\r\n  if (dropdownMenu.classList.contains('open')) {\r\n    icon.classList.remove('uil-bars');\r\n    icon.classList.add('uil-times');\r\n  } else {\r\n    icon.classList.remove('uil-times');\r\n    icon.classList.add('uil-bars');\r\n  }\r\n});\r\n\r\nfunction updateDateTime() {\r\n  const timeElement = document.getElementById('current-time');\r\n  const now = new Date();\r\n  const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n  timeElement.innerHTML = now.toLocaleDateString('en-US', options);\r\n  timeElement.setAttribute('datetime', now.toISOString());\r\n}\r\n\r\nupdateDateTime();\r\nsetInterval(updateDateTime, 1000);\r\n"],"names":[],"version":3,"file":"science.b56de481.js.map","sourceRoot":"/__parcel_source_root/"}